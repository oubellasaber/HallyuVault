// <auto-generated />
using System;
using HallyuVault.Etl.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HallyuVault.Etl.Migrations
{
    [DbContext(typeof(EtlContext))]
    partial class EtlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HallyuVault.Etl.MetadataEnrichment.FileNameMetadata", b =>
                {
                    b.Property<int>("FileNameMetadataId")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Network")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RangeEnd")
                        .HasColumnType("int");

                    b.Property<int>("RangeStart")
                        .HasColumnType("int");

                    b.Property<string>("ReleaseGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RipType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("int");

                    b.HasKey("FileNameMetadataId");

                    b.ToTable("FileNameMetadata");
                });

            modelBuilder.Entity("HallyuVault.Etl.MetadataEnrichment.MediaMetadata", b =>
                {
                    b.Property<int>("MediaMetadataId")
                        .HasColumnType("int");

                    b.Property<int>("AudioChannels")
                        .HasColumnType("int");

                    b.Property<string>("AudioCodecName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("VideoCodecName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("MediaMetadataId");

                    b.ToTable("MediaMetadata");
                });

            modelBuilder.Entity("HallyuVault.Etl.MetadataEnrichment.SubtitleMetadata", b =>
                {
                    b.Property<int>("SubtitleMetadataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubtitleMetadataId"));

                    b.Property<string>("CodecName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MediaMetadataId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubtitleMetadataId");

                    b.HasIndex("MediaMetadataId");

                    b.ToTable("SubtitleMetadata");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.ContainerScrapedLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FileCryptLinkId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentResolvedLinkId")
                        .HasColumnType("int");

                    b.Property<string>("ScrapedLink")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("FileCryptLinkId")
                        .IsUnique()
                        .HasFilter("[FileCryptLinkId] IS NOT NULL");

                    b.HasIndex("ParentResolvedLinkId");

                    b.ToTable("ContainerScrapedLink", t =>
                        {
                            t.HasCheckConstraint("CK_ContainerScrapedLink_OnlyOneFK", "\r\n                    (\r\n                        (CASE WHEN FileCryptLinkId IS NOT NULL THEN 1 ELSE 0 END)\r\n                    ) = 1\r\n                ");
                        });
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.DramaDayLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EpisodeVersionId")
                        .HasColumnType("int");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeVersionId");

                    b.ToTable("DramaDayLink");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MediaVersionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MediaVersionId");

                    b.ToTable("Episodes");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.EpisodeMetadata", b =>
                {
                    b.Property<int>("EpisodeMetadataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EpisodeMetadataId"));

                    b.Property<Guid?>("ContainerScrapedLinkVersionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("FileNameMetadataId")
                        .HasColumnType("int");

                    b.Property<int?>("MediaMetadataId")
                        .HasColumnType("int");

                    b.Property<int?>("RawEpisodeVersionId")
                        .HasColumnType("int");

                    b.HasKey("EpisodeMetadataId");

                    b.ToTable("EpisodeMetadata");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.EpisodeVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeId");

                    b.ToTable("EpisodeVersion");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.FileCryptLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FileCryptContainerId")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("FileSize")
                        .HasColumnType("float");

                    b.Property<int?>("FileUnit")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FileCryptContainerId");

                    b.ToTable("FileCryptLink", t =>
                        {
                            t.HasCheckConstraint("CK_FileHostContainer_FileSizeAndUnit", "\r\n                    (       \r\n                        (FileSize IS NULL AND FileUnit IS NULL) OR\r\n                        (FileSize IS NOT NULL AND FileUnit IS NOT NULL)\r\n                    )\r\n                ");
                        });
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.LinkContainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ResolvedLinkId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ResolvedLinkId")
                        .IsUnique();

                    b.ToTable("LinkContainer");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.LinkVersion", b =>
                {
                    b.Property<int>("LinkVersionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkVersionId"));

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ScrapedLinkId")
                        .HasColumnType("int");

                    b.HasKey("LinkVersionId");

                    b.HasIndex("ScrapedLinkId")
                        .IsUnique();

                    b.ToTable("LinkVersions");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.Media", b =>
                {
                    b.Property<string>("MediaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EnglishTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KoreanTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MediaId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.MediaVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("MediaVersions");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.ResolvedLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ParentRawLinkId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResolvedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResolvedLinkUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentRawLinkId")
                        .IsUnique();

                    b.ToTable("ResolvedLinks");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.ScrapedDrama", b =>
                {
                    b.Property<int>("ScrapedDramaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PulledOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("ScrapedDramaId");

                    b.ToTable("ScrapedDramas");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MediaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("SeasonNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.BatchEpisode", b =>
                {
                    b.HasBaseType("HallyuVault.Etl.Models.Episode");

                    b.Property<int>("EpisodeEnd")
                        .HasColumnType("int");

                    b.Property<int>("EpisodeStart")
                        .HasColumnType("int");

                    b.ToTable("BatchEpisodes", (string)null);
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.SpecialEpisode", b =>
                {
                    b.HasBaseType("HallyuVault.Etl.Models.Episode");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SpecialEpisodes", (string)null);
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.StandardEpisode", b =>
                {
                    b.HasBaseType("HallyuVault.Etl.Models.Episode");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("int");

                    b.ToTable("StandardEpisodes", (string)null);
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.UnknownEpisode", b =>
                {
                    b.HasBaseType("HallyuVault.Etl.Models.Episode");

                    b.Property<string>("RawTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UnknownEpisodes", (string)null);
                });

            modelBuilder.Entity("HallyuVault.Etl.MetadataEnrichment.FileNameMetadata", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.EpisodeMetadata", null)
                        .WithOne("FileNameMetadata")
                        .HasForeignKey("HallyuVault.Etl.MetadataEnrichment.FileNameMetadata", "FileNameMetadataId");
                });

            modelBuilder.Entity("HallyuVault.Etl.MetadataEnrichment.MediaMetadata", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.EpisodeMetadata", null)
                        .WithOne("MediaMetadata")
                        .HasForeignKey("HallyuVault.Etl.MetadataEnrichment.MediaMetadata", "MediaMetadataId");
                });

            modelBuilder.Entity("HallyuVault.Etl.MetadataEnrichment.SubtitleMetadata", b =>
                {
                    b.HasOne("HallyuVault.Etl.MetadataEnrichment.MediaMetadata", "MediaMetadata")
                        .WithMany("Subtitles")
                        .HasForeignKey("MediaMetadataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaMetadata");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.ContainerScrapedLink", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.FileCryptLink", "FileCryptLink")
                        .WithOne("ContainerScrapedLink")
                        .HasForeignKey("HallyuVault.Etl.Models.ContainerScrapedLink", "FileCryptLinkId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HallyuVault.Etl.Models.ContainerScrapedLink", "ParentResolvedLink")
                        .WithMany()
                        .HasForeignKey("ParentResolvedLinkId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FileCryptLink");

                    b.Navigation("ParentResolvedLink");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.DramaDayLink", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.EpisodeVersion", null)
                        .WithMany("Links")
                        .HasForeignKey("EpisodeVersionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.Episode", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.MediaVersion", null)
                        .WithMany("Episodes")
                        .HasForeignKey("MediaVersionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.EpisodeVersion", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.Episode", null)
                        .WithMany("EpisodeVersions")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.FileCryptLink", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.LinkContainer", "FileCryptContainer")
                        .WithMany("FileCryptLinks")
                        .HasForeignKey("FileCryptContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileCryptContainer");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.LinkContainer", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.ResolvedLink", "ResolvedLink")
                        .WithOne()
                        .HasForeignKey("HallyuVault.Etl.Models.LinkContainer", "ResolvedLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResolvedLink");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.LinkVersion", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.ContainerScrapedLink", "ScrapedLink")
                        .WithOne()
                        .HasForeignKey("HallyuVault.Etl.Models.LinkVersion", "ScrapedLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScrapedLink");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.MediaVersion", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.Season", null)
                        .WithMany("MediaVersions")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.ResolvedLink", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.DramaDayLink", "ParentRawLink")
                        .WithOne()
                        .HasForeignKey("HallyuVault.Etl.Models.ResolvedLink", "ParentRawLinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentRawLink");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.Season", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.Media", null)
                        .WithMany("Seasons")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.BatchEpisode", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.Episode", null)
                        .WithOne()
                        .HasForeignKey("HallyuVault.Etl.Models.BatchEpisode", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.SpecialEpisode", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.Episode", null)
                        .WithOne()
                        .HasForeignKey("HallyuVault.Etl.Models.SpecialEpisode", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.StandardEpisode", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.Episode", null)
                        .WithOne()
                        .HasForeignKey("HallyuVault.Etl.Models.StandardEpisode", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.UnknownEpisode", b =>
                {
                    b.HasOne("HallyuVault.Etl.Models.Episode", null)
                        .WithOne()
                        .HasForeignKey("HallyuVault.Etl.Models.UnknownEpisode", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HallyuVault.Etl.MetadataEnrichment.MediaMetadata", b =>
                {
                    b.Navigation("Subtitles");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.Episode", b =>
                {
                    b.Navigation("EpisodeVersions");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.EpisodeMetadata", b =>
                {
                    b.Navigation("FileNameMetadata");

                    b.Navigation("MediaMetadata");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.EpisodeVersion", b =>
                {
                    b.Navigation("Links");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.FileCryptLink", b =>
                {
                    b.Navigation("ContainerScrapedLink")
                        .IsRequired();
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.LinkContainer", b =>
                {
                    b.Navigation("FileCryptLinks");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.Media", b =>
                {
                    b.Navigation("Seasons");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.MediaVersion", b =>
                {
                    b.Navigation("Episodes");
                });

            modelBuilder.Entity("HallyuVault.Etl.Models.Season", b =>
                {
                    b.Navigation("MediaVersions");
                });
#pragma warning restore 612, 618
        }
    }
}
